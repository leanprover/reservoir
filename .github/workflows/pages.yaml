name: Pages

on:
  push:
    branches:
      - 'pages/**'  # branch pattern for pages-only changes
  # Enable running this workflow from ci.yml
  workflow_call:
    inputs:
      ci:
        description: "Used to distinguish a CI workflow call from a standalone workflow"
        type: boolean
        required: false
        default: true
      index-artifact:
        description: "Use local artifact, not reservoir-index"
        type: boolean
        required: false
        default: true
  # Enable running this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN needed for deployment
permissions:
  contents: read
  deployments: none # do not allow the Netlify action to produce a deployment
  pull-requests: write
  statuses: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  bundle:
    name: Bundle Manifest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Testbed Results (CI)
        if: inputs.ci
        uses: actions/download-artifact@v3
        with:
          name: results
      - name: Download Testbed Results (Standalone)
        if: (!inputs.ci)
        run: gh run download -n results
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Download Index Artifact
        if: inputs.index-artifact
        uses:  actions/download-artifact@v3
        with:
          name: index
      - name: Download Index Repository
        if: (!inputs.index-artifact)
        run: |
          mkdir index
          gh api repos/leanprover/reservoir-index/tarball \
            | tar -xvz -C index --strip-component=1
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Create Manifest
        run: ./bundle.py ${{ inputs.index-artifact && 'index.json' || 'index' }} results.json -o manifest.json
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Upload Manifest
        uses: actions/upload-artifact@v3
        with:
          name: manifest
          path: manifest.json
          if-no-files-found: error
  deploy:
    needs: bundle
    name: Deploy
    environment:
      name: netlify
      url: ${{ steps.publish.outputs.deploy-url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Manifest
        uses: actions/download-artifact@v3
        with:
          name: manifest
          path: site
      - name: Install Node Modules
        run: npm ci
      - name: Build Site
        run: npm run generate
      - name: Download Index Repository
        run: |
          mkdir .output/public/index
          gh api repos/leanprover/reservoir-index/tarball \
            | tar -xvz -C .output/public/index --strip-component=1
        env:
          GH_TOKEN: ${{ github.token }}
      - id: deploy-info
        name: Compute Deploy Info
        run: |
          set -e
          python3 -c 'import base64; print("alias="+base64.urlsafe_b64encode(bytes.fromhex("${{github.sha}}")).decode("utf-8").rstrip("="))' >> "$GITHUB_OUTPUT"
          echo "message=`git log -1 --pretty=format:"%s"`" >> "$GITHUB_OUTPUT"
      - id: publish
        name: Publish to Netlify
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: .output/public
          production-branch: master
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: |
            ${{ github.event_name == 'pull_request' && format('pr#{0}: {1}', github.event.number, github.event.pull_request.title) || format('ref/{0}: {1}', github.ref_name, steps.deploy-info.outputs.message) }}
          alias: ${{ steps.deploy-info.outputs.alias }}
          enable-commit-comment: false
          fails-without-credentials: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
