name: Testbed

on:
  push:
    branches:
      - master
      - 'stage/**'   # branch pattern for general changes
      - 'testbed/**' # branch pattern for testbed-only changes
  # Enable running this workflow manually from the Actions tab
  workflow_dispatch:

# Permit only 1 concurrent testbed run per branch, cancelling previous ones
concurrency:
  group: testbed/${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  fetch:
    name: Fetch
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.output-repos.outputs.matrix }}
      toolchain: ${{ steps.find-toolchain.outputs.toolchain }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Query Repositories
        run: ./fetch.py ${{ github.ref_name == 'master' && 100 || 20 }} -o matrix.json -v
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Upload Matrix
        uses: actions/upload-artifact@v3
        with:
          name: matrix
          path: matrix.json
      - id: output-repos
        name: Output Matrix
        run: (echo -n 'matrix='; cat matrix.json) >> "$GITHUB_OUTPUT"
      - id: find-toolchain
        name: Find Latest Toolchain
        shell: bash -euo pipefail {0}
        run: |
          latest=$(gh release list -R leanprover/lean4 -L 1 | cut -f1)
          echo "toolchain=leanprover/lean4:$latest" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
  build:
    needs: fetch
    name: Build ${{ matrix.fullName }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include: ${{ fromJson(needs.fetch.outputs.matrix) }}
      # complete all jobs
      fail-fast: false
    steps:
      - name: Install Elan
        shell: bash -euo pipefail {0}
        run: |
          curl -sSfL https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh | sh -s -- -y --default-toolchain ${{ needs.fetch.outputs.toolchain }}
          echo "$HOME/.elan/bin" >> $GITHUB_PATH
      - name: Check Lean
        run: lean --version
      - name: Checkout
        uses: actions/checkout@v3
      - id: build
        name: Build
        continue-on-error: true
        # Note that this runs arbitrary untrusted code so we cannot give it secrets
        run: ./build-one.sh ${{ matrix.fullName }} testbed ${{ needs.fetch.outputs.toolchain }}
      - name: Output Outcome
        run: |
          mkdir -p testbed/build
          echo ${{ steps.build.outcome }} > testbed/build/outcome.txt
      - name: Upload Results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.id }}
          path: testbed/build
  bundle:
    needs: [fetch, build]
    name: Bundle
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Individual Results
        uses: actions/download-artifact@v3
        with:
          # Without a name, downloads all artifacts
          path: testbed
      - name: Create Manifest
        run: ./bundle.py testbed ${{ needs.fetch.outputs.toolchain }} -o testbed/manifest.json
      - name: Cleanup Matrix
        run: rm -rf testbed/matrix/
      - name: Upload Bundle
        uses: actions/upload-artifact@v3
        with:
          name: testbed
          path: testbed

