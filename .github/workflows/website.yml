name: Website

on:
  push:
    branches:
      - 'website/**'  # branch pattern for website-only changes
  # Enable running this workflow from ci.yml
  workflow_call:
    inputs:
      index-repo:
        description: "Registry index repository"
        type: string
        required: false
      index-artifact:
        description: "Use local artifact for index"
        type: boolean
        required: false
        default: false
      testbed-artifact:
        description: "Augment index with local testbed results"
        type: boolean
        required: false
      production-deploy:
        description: "Deploy website to production"
        type: boolean
        required: false
        default: false
  # Enable running this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      index-repo:
        description: "Registry index repository"
        type: string
        required: true
        default: leanprover/reservoir-index
      production-deploy:
        description: "Deploy website to production"
        type: boolean
        required: false
        default: false

# Sets permissions of the GITHUB_TOKEN needed for deployment
permissions:
  contents: read
  statuses: write

# Allow only one concurrent deployment per commit or per prodcution, cancelling previous ones.
concurrency:
  group: website/${{ inputs.production-deploy && 'prod' || github.sha }}
  cancel-in-progress: true

jobs:
  bundle:
    name: Bundle Manifest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Testbed Artifact
        if: inputs.testbed-artifact
        uses: actions/download-artifact@v4
        with:
          name: results
      - name: Download Index Artifact
        if: inputs.index-artifact
        uses:  actions/download-artifact@v4
        with:
          name: index
          path: index
      - name: Download Index Repository
        if: (!inputs.index-artifact)
        run: |
          mkdir index
          gh api repos/${{ inputs.index-repo || 'leanprover/reservoir-index' }}/tarball \
            | tar -xvz -C index --strip-component=1
        env:
          GH_TOKEN: ${{ secrets.RESERVOIR_INDEX_TOKEN }}
      - name: Create Manifest
        run: |
          scripts/bundle.py -o manifest.json index \
            ${{ inputs.testbed-artifact && 'results.json' || '' }}
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Upload Manifest
        uses: actions/upload-artifact@v4
        with:
          name: manifest
          path: manifest.json
          if-no-files-found: error
  deploy:
    needs: bundle
    name: Deploy
    environment:
      name: netlify
      url: ${{ steps.publish.outputs.deploy-url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Manifest
        uses: actions/download-artifact@v4
        with:
          name: manifest
          path: site
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install Node Modules
        run: npm ci
      - name: Build Site
        run: npm run generate
      - name: Download Index Artifact
        if: inputs.index-artifact
        uses:  actions/download-artifact@v4
        with:
          name: index
          path: .output/public/index
      - name: Download Index Repository
        if: (!inputs.index-artifact)
        run: |
          set -eo pipefail
          mkdir .output/public/index
          gh api repos/${{ inputs.index-repo || 'leanprover/reservoir-index' }}/tarball \
            | tar -xvz -C .output/public/index --strip-component=1
        env:
          GH_TOKEN: ${{ secrets.RESERVOIR_INDEX_TOKEN }}
      - name: Copy Manifest to Site
        run: cp site/manifest.json .output/public/index/manifest.json
      - id: deploy-info
        name: Compute Deploy Info
        run: |
          set -e
          python3 -c 'import base64; print("alias="+base64.urlsafe_b64encode(bytes.fromhex("${{github.sha}}")).decode("utf-8").rstrip("="))' >> "$GITHUB_OUTPUT"
          echo "message=`git log -1 --pretty=format:"%s"`" >> "$GITHUB_OUTPUT"
      - id: publish
        name: Publish to Netlify
        run: |
          npx netlify-cli deploy --json --dir=.output/public --functions=site/functions --skip-functions-cache \
            ${{ inputs.production-deploy && '--prod' || format('--alias={0}', steps.deploy-info.outputs.alias) }} \
            --message '${{ github.event_name == 'pull_request' && format('pr#{0}: {1}', github.event.number, github.event.pull_request.title) || format('ref/{0}: {1}', github.ref_name, steps.deploy-info.outputs.message) }}' \
            > deploy.json
          echo "deploy-url=$(jq -r '.deploy_url' deploy.json)" >> "$GITHUB_OUTPUT"
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: Set Commit Status
        if: github.event_name == 'pull_request' || github.event_name == 'push'
        uses: myrotvorets/set-commit-status-action@v2.0.0
        with:
          status: success
          context: Netlify
          description: Deployed to Netlify
          targetUrl: ${{ steps.publish.outputs.deploy-url }}
