name: Testbed

on:
  push:
    branches:
      - 'testbed/**' # branch pattern for testbed-only changes
  # Enable running this workflow from ci.ymld
  workflow_call:
    inputs:
      index-repo:
        description: "Registry index repository"
        type: string
        required: false
      index-artifact:
        description: "Local artifact for index"
        type: string
        required: false
        default: index
      reuse-artifact:
        description: "Reuse local artifact for index"
        type: boolean
        required: false
        default: false
      search-packages:
        description: "Search GitHub for new packages"
        type: boolean
        required: false
        default: false
      package-pattern:
        description: "Regex search for indexed packages to analyze"
        type: string
        required: false
      version-pattern:
        description: "Regex search for version tags to build"
        type: string
        required: false
      toolchain:
        description: "Lean toolchain(s) to test against"
        type: string
        required: false
      max-size:
        description: "Max number of packages to test"
        type: number
        required: false
      update-index:
        description: "Save to index"
        type: boolean
        required: false
      dev:
        description: "Optimize for development (uses dev-exclusions)"
        type: boolean
        required: false
        default: false
  # Enable running this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      index-repo:
        description: "Registry index repository"
        type: string
        required: true
        default: leanprover/reservoir-index
      search-packages:
        description: "Search GitHub for new packages"
        type: boolean
        required: false
        default: false
      package-pattern:
        description: "Regex search for indexed packages"
        type: string
        required: false
        default: ".*"
      version-pattern:
        description: "Regex search for version tags to build"
        type: string
        required: false
      toolchain:
        description: "Lean toolchain(s) on which to build"
        type: string
        required: false
        default: package
      max-size:
        description: "Max number of testbed entries"
        type: number
        required: false
      update-index:
        description: "Save to index"
        type: boolean
        required: false
        default: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.output-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Index Artifact
        if: inputs.reuse-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.index-artifact }}
          path: index
      - name: Download Index Repository
        if: inputs.index-repo && !inputs.reuse-artifact
        run: |
          mkdir index
          gh api repos/${{ inputs.index-repo }}/tarball \
            | tar -xvz -C index --strip-component=1
        env:
          GH_TOKEN: ${{ secrets.RESERVOIR_INDEX_TOKEN  }}
      - name: Create Matrix
        run: |
          scripts/testbed-create.py -o matrix.json  \
            ${{ inputs.index-repo && '-i index' || '' }} \
            -P '${{ inputs.package-pattern }}' \
            -V '${{ inputs.version-pattern }}' \
            -T '${{ inputs.toolchain || 'package' }}'  \
            -n ${{ toJson(inputs.max-size) == 'null' && -1 || inputs.max-size }} \
            -Q ${{ inputs.search-packages && (inputs.dev && 100 || -1) || 0 }} \
            -X ${{ inputs.dev && 'scripts/package-dev-exclusions.txt' || 'scripts/package-exclusions.txt' }}
        env:
          GH_TOKEN: ${{ secrets.RESERVOIR_INDEX_TOKEN }}
      - name: Upload Matrix
        uses: actions/upload-artifact@v4
        with:
          name: matrix
          path: matrix.json
          if-no-files-found: error
      - id: output-matrix
        name: Output Matrix
        run: (echo -n 'matrix='; cat matrix.json) >> "$GITHUB_OUTPUT"
  # Multiple layers are used to exceed the 256 job limit for a matrix.
  # This tactic has been reported to GitHub in a dicussion and appears acceptable.
  # https://github.com/orgs/community/discussions/38704
  run:
    needs: setup
    name: Layer ${{ matrix.name }}
    strategy:
      matrix:
        include: ${{ fromJson(needs.setup.outputs.matrix) }}
      # complete all jobs
      fail-fast: false
    uses: ./.github/workflows/testbed-layer.yml
    with:
      matrix: ${{ toJson(matrix.data) }}
  collect:
    needs: run
    name: Collect Results
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Individual Results
        uses: actions/download-artifact@v4
        with:
          # Without a name, downloads all artifacts
          path: testbed
      - name: Collect Outcomes
        run: |
          scripts/testbed-collect.py -v \
            testbed -o testbed/results.json \
            ${{ github.run_id }} ${{ github.run_attempt }} \
            -R '${{ github.repository }}'
        env:
          GH_TOKEN: ${{ secrets.RESERVOIR_INDEX_TOKEN }}
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      - name: Upload Results Artifact
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: testbed/results.json
          if-no-files-found: error
  save:
    needs: collect
    name: Save Results
    runs-on: ubuntu-latest
    # Permit only 1 concurrent update of the same index repository.
    concurrency:
      group: ${{ inputs.update-index && format('update-index/{0}', inputs.index-repo) || format('index/{0}', github.run_id) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download Index Artifact
        if: inputs.reuse-artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.index-artifact }}
          path: index
      - name: Checkout External Index
        if: inputs.index-repo && !inputs.reuse-artifact
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RESERVOIR_INDEX_TOKEN }}
          repository: ${{ inputs.index-repo }}
          path: index
      - name: Download Results Artifact
        uses: actions/download-artifact@v4
        with:
          name: results
      - name: Write Results to Index
        run: scripts/testbed-save.py -v results.json index
        env:
          GH_TOKEN: ${{ secrets.RESERVOIR_INDEX_TOKEN }}
      - name: Update External Index
        if: inputs.update-index
        uses: EndBug/add-and-commit@v9
        with:
          cwd: index
          fetch: false
          message: |
            chore: update w/ testbed run results

            ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}/attempts/${{github.run_attempt}}
          default_author: github_actions
      - name: Upload Index Artifact
        if: (!inputs.update-index)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.index-artifact || 'index' }}
          path: index
          if-no-files-found: error
          overwrite: ${{ inputs.reuse-artifact == true }}
